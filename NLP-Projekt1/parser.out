Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> OPEN PATH
Rule 2     expression -> CLOSE PATH
Rule 3     expression -> OPEN PATH AND PATH
Rule 4     expression -> CLOSE PATH AND PATH
Rule 5     expression -> LISTEN

Terminals, with rules where they appear

AND                  : 3 4
CLOSE                : 2 4
LISTEN               : 5
OPEN                 : 1 3
PATH                 : 1 2 3 3 4 4
error                : 

Nonterminals, with rules where they appear

expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . OPEN PATH
    (2) expression -> . CLOSE PATH
    (3) expression -> . OPEN PATH AND PATH
    (4) expression -> . CLOSE PATH AND PATH
    (5) expression -> . LISTEN

    OPEN            shift and go to state 2
    CLOSE           shift and go to state 3
    LISTEN          shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> OPEN . PATH
    (3) expression -> OPEN . PATH AND PATH

    PATH            shift and go to state 5


state 3

    (2) expression -> CLOSE . PATH
    (4) expression -> CLOSE . PATH AND PATH

    PATH            shift and go to state 6


state 4

    (5) expression -> LISTEN .

    $end            reduce using rule 5 (expression -> LISTEN .)


state 5

    (1) expression -> OPEN PATH .
    (3) expression -> OPEN PATH . AND PATH

    $end            reduce using rule 1 (expression -> OPEN PATH .)
    AND             shift and go to state 7


state 6

    (2) expression -> CLOSE PATH .
    (4) expression -> CLOSE PATH . AND PATH

    $end            reduce using rule 2 (expression -> CLOSE PATH .)
    AND             shift and go to state 8


state 7

    (3) expression -> OPEN PATH AND . PATH

    PATH            shift and go to state 9


state 8

    (4) expression -> CLOSE PATH AND . PATH

    PATH            shift and go to state 10


state 9

    (3) expression -> OPEN PATH AND PATH .

    $end            reduce using rule 3 (expression -> OPEN PATH AND PATH .)


state 10

    (4) expression -> CLOSE PATH AND PATH .

    $end            reduce using rule 4 (expression -> CLOSE PATH AND PATH .)

